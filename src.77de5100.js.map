{"version":3,"sources":["index.ts"],"names":[],"mappings":";;AAAA,IAAI,cAAc,GAAG,IAAI,GAAG,CAAC,CAAC,OAAO,EAAE,kBAAkB,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;AAEvF,MAAM,CAAC,MAAM,GAAG,YAAA;EACd,IAAI,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAqB;EACrE,cAAc,CAAC,OAAO,CAAC,UAAC,SAAiB,EAAA;IACvC,UAAU,CAAC,gBAAgB,CAAC,SAAS,EAAE,UAAC,EAAS,EAAA;MAC/C,IAAI,YAAY,GAAG,EAAE,CAAC,MAA0B;MAChD,IAAI,OAAO,GAAG,IAAI,gBAAgB,CAAA,CAAE;MACpC,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC;IAClC,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;AAED,IAAA,gBAAA,GAAA,aAAA,YAAA;EAAA,SAAA,gBAAA,CAAA,EAAA,CA4BA;EAvBS,gBAAA,CAAA,SAAA,CAAA,UAAU,GAAjB,UAAkB,YAA8B,EAAA;IAC9C,IAAI,QAAQ,GAAG,YAAY,CAAC,KAAK;IACjC,IAAI,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC;IAE5B,IAAI,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC;IACxD,cAAc,CAAC,SAAS,GAAG,gBAAgB,CAAC,aAAa,CAAC,KAAK,CAAC;EAClE,CAAC;EAEM,gBAAA,CAAA,aAAa,GAApB,UAAqB,KAAa,EAAA;IAChC,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE;MAChB,OAAO,2BAA2B;;IAGpC,IAAI,eAAe,GAAG,KAAK,GAAG,gBAAgB,CAAC,UAAU;IACzD,IAAI,sBAAsB,GAAG,eAAe,GAAG,gBAAgB,CAAC,mBAAmB;IACnF,IAAI,sBAAsB,GAAG,gBAAgB,CAAC,mBAAmB,EAAE;MACjE,OAAO,2BAA2B;;IAGpC,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,sBAAsB,CAAC;IAC3C,OAAO,IAAI,CAAC,WAAW,CAAA,CAAE;EAC3B,CAAC;EAzBM,gBAAA,CAAA,UAAU,GAAW,kBAAkB;EACvC,gBAAA,CAAA,mBAAmB,GAAW,KAAK;EACnC,gBAAA,CAAA,mBAAmB,GAAW,gBAAgB;EAyBvD,OAAA,gBAAC;CA5BD,CAAA,CAAA","file":"src.77de5100.js","sourceRoot":"../src","sourcesContent":["var possibleEvents = new Set([\"input\", \"onpropertychange\", \"keyup\", \"change\", \"paste\"]);\n\nwindow.onload = () => {\n  var ticksInput = document.getElementById(\"ticks\") as HTMLInputElement;\n  possibleEvents.forEach((eventName: string) => {\n    ticksInput.addEventListener(eventName, (ev: Event) => {\n      var inputElement = ev.target as HTMLInputElement;\n      var handler = new TickInputHandler();\n      handler.showResult(inputElement);\n    })\n  })\n}\n\nclass TickInputHandler {\n  static epochTicks: number = 621355968000000000;\n  static ticksPerMillisecond: number = 10000;\n  static maxDateMilliseconds: number = 8640000000000000;\n\n  public showResult(inputElement: HTMLInputElement) {\n    var valueStr = inputElement.value;\n    var ticks = Number(valueStr);\n\n    var dateTimeOutput = document.getElementById(\"datetime\");\n    dateTimeOutput.innerHTML = TickInputHandler.getDateString(ticks) \n  }\n\n  static getDateString(ticks: number): string {\n    if (isNaN(ticks)) {\n      return \"____-__-__T__:__:__.____Z\";\n    }\n\n    var ticksSinceEpoch = ticks - TickInputHandler.epochTicks;\n    var millisecondsSinceEpoch = ticksSinceEpoch / TickInputHandler.ticksPerMillisecond;\n    if (millisecondsSinceEpoch > TickInputHandler.maxDateMilliseconds) {\n      return \"9999-99-99T99:99:99:9999Z\";    \n    }\n\n    var date = new Date(millisecondsSinceEpoch);\n    return date.toISOString();\n  }\n\n}\n"]}